.. _Atom : https://atom.io

====================================
Installer un √©diteur de texte (Atom)
====================================

Vous voulez programmer ? Excellente nouvelle ! Pour √ßa, il va vous falloir un environnement de d√©veloppement. En la mati√®re, deux grandes options s'offrent √† vous :

- Les IDE ( *Integrated Development Environment* ) : tels le c√©l√®bre Eclipse ou le pythonique PyCharm, ces logiciels regroupent en un m√™me endroit un √©diteur de code source, un debugger et d'autres outils ;
- Les √©diteurs de texte.

Contrairement √† ce que l'on pourrait penser, les √©diteurs de texte peuvent tout-√†-fait rivaliser avec les IDE en tant qu'environnements de d√©veloppement. Si vous choisissez cette option, oubliez Notepad ou TextEdit et laissez-moi vous pr√©senter un √©diteur qui fait fureur : Atom_ !

.. note::
  Il existe pl√©thore d'√©diteurs de texte tels que Notepad++ (Windows), TextWrangler (macOS), Sublime Text (multi-plateforme)... On √©voque ici Atom parce que c'est un √©diteur open source, extr√™mement flexible et avec une tr√®s bonne communaut√©. Vous √™tes bien s√ªr libres de choisir et de d√©velopper votre *workflow* comme bon vous semble !

Qu'est-ce qu'Atom ?
===================

Atom un √©diteur de texte open source d√©velopp√© par les √©quipes de GitHub. Il est "pens√© pour les besoins du d√©veloppeur du 21√®me si√®cle". Atom est flexible, hautement personnalisable et disponible pour Windows, macOS et Linux. C'est un √©diteur assez r√©cent mais il y a d√©j√† pl√©thore de packages et de plugins disponibles, souvent de tr√®s bonne qualit√©, afin de vous permettre de programmer toujours plus efficacement ! Et puis, l'interface a de la gueule, vous ne trouvez pas ?

.. image:: /media/atom-preview.png

Installer Atom
==============

1. Allez sur le site d'Atom : https://atom.io ;
2. T√©l√©chargez Atom (environ 200Mo) ;
3. Installez Atom en suivant les instructions propres √† votre syst√®me d'exploitation ;
4. Enjoy !

Installer des packages
======================

Tout l'int√©r√™t d'Atom r√©side dans sa modularit√© ! Il existe des milliers de packages que vous pouvez installer pour personnaliser l'√©diteur et le rendre encore plus agr√©able √† utiliser. Voici comment proc√©der pour installer un package :

1. Ouvrez le panneau de pr√©f√©rences ( ``Cmd + ,`` sur macOS) ;
2. Allez dans l'onglet "Install" ;
3. Recherchez un package gr√¢ce √† la barre de recherche ;
4. Installez le package qui vous int√©resse.

Les th√®mes s'installent aussi via cet onglet "Install".

Atom vous renseigne le nombre de fois qu'un package ou un th√®me a √©t√© install√©. Bien que ce soit discutable, c'est souvent un indicateur de la qualit√© du package.

Vous retrouvez les packages et les th√®mes install√©s dans les onglets correspondants du panneau de pr√©f√©rences.

Int√©gration de Git
==================

.. _git diff : https://atom.io/packages/git-diff
.. _github : https://atom.io/packages/github

Bonne nouvelle : Atom prend d√©j√† tout en charge ! üòÑ Atom inclut par d√©faut des packages vous permettant d'int√©grer Git √† l'√©diteur. Par exemple, le package `git diff`_ vous indique en temps r√©el l'√©tat de votre repo local, en affichant les lignes ajout√©es, modifi√©es ou supprim√©es dans la goutti√®re de l'√©diteur. Le package `github`_ ajoute une interface vers GitHub pour g√©rer vos Pull Requests directement dans Atom. Tous ces packages sont activ√©s par d√©faut et vous n'avez normalement pas trop √† vous soucier de leur configuration. Voici un aper√ßu de ce que √ßa donne concr√®tement :

.. image:: /media/git-diff-preview.png

Sur cet exemple, le fichier ``collections.lua`` a √©t√© modifi√©, il appara√Æt donc en orange dans la ``tree-view`` ainsi que ses r√©pertoires parents (ici les dossiers ``rope`` et ``src``). Les lignes 64 √† 77 ont √©t√© ajout√©es, la goutti√®re est donc verte √† cet endroit. De m√™me, les lignes 79 et 80 ont √©t√© modifi√©es, la goutti√®re est donc orange √† cet endroit. Lorsqu'une ligne a √©t√© modifi√©e, un petit trait rouge appara√Æt dans la goutti√®re.

Quelques packages utiles
========================

Quand vous installez Atom, un certain nombre de packages sont disponibles. Voici une liste d'autres packages qui peuvent vous √™tre (tr√®s) utiles. N'h√©sitez pas √† en sugg√©rer ou √† en ajouter d'autres ! üëç

G√©n√©ral
-------

.. _File icons : https://atom.io/packages/file-icons
.. _Highlight Selected : https://atom.io/packages/highlight-selected
.. _Merge Conflicts: https://atom.io/packages/merge-conflicts
.. _Linter: https://atom.io/packages/linter

- `File icons`_ : package tout simple qui associe une image et une couleur √† chaque fichier afin de mieux les identifier dans Atom.
- `Highlight Selected`_ : il vous permet de s√©lectionner toutes les occurrences d'un nom dans un fichier, simplement en double-cliquant dessus !
- `Merge Conflicts`_ : lorsque vous g√©rez des conflits suite √† un merge sur Git, il n'est pas toujours facile de s'y retrouver. Ce package vous facilite la vie en rendant le processus beaucoup plus visuel.
- Linter_ : ce package fait gagner un temps fou ! Il permet de d√©tecter automatiquement des erreurs telles que les erreurs de syntaxe, les variables non-d√©clar√©es, etc... sans avoir besoin d'ex√©cuter le code ! Cependant, Linter est le package de base, tout seul il ne fait pas grand chose : il faudra l'agr√©menter d'un package par langage (voir l'exemple pour Python).

Pour le d√©veloppement Python
----------------------------

.. _autocomplete-python: https://atom.io/packages/autocomplete-python
.. _linter-flake8: https://github.com/AtomLinter/linter-flake8
.. _python-autopep8 : https://github.com/markbaas/atom-python-autopep8
.. _PEP8 : https://www.python.org/dev/peps/pep-0008/

- autocomplete-python_ : des autocompl√©tions pour Python
- linter-flake8_ : la version pour Python du linter de base. Avec ce package, les erreurs de syntaxe Python s'affiche directement dans l'√©diteur, sans avoir besoin d'ex√©cuter le code ! Comme indiqu√© dans la documentation du package, ``linter-flake8`` suppose que vous ayez install√© le package Python ``flake8`` (avec ``pip`` : ``pip install flake8``). √âvidemment, vous devez avoir install√© Linter pour que ``linter-flake8`` fonctionne.
- python-autopep8_ : ce package formate automatiquement votre code afin qu'il respecte les conventions PEP8_. En activant l'option "Format On Save" du package, vous pouvez rendre votre code plus "PEP8-compliant" en un clin d'≈ìil ! Il suppose que vous ayez install√© le package Python ``autopep8`` (avec ``pip`` : ``pip install autopep8``).

Pour le d√©veloppement web (HTML/CSS/JS)
---------------------------------------

.. _atom-bootstrap4 : https://github.com/mdegoo/atom-bootstrap4
.. _pigments : https://atom.io/packages/pigments
.. _Color picker: https://atom.io/packages/color-picker
.. _atom-django-templates: https://github.com/benjohnson/atom-django-templates

- atom-bootstrap4_ : un snippet qui peut g√©n√©rer un template Bootstrap4 avec `htmlb4 + Tab` et bien d'autres choses !
- pigments_ : ce package vous montre les couleurs qu'il trouve dans vos fichiers directement dans l'√©diteur ! Tr√®s pratique lorsqu'on veut avoir un aper√ßu d'une palette de couleurs, dans un fichier CSS par exemple.
- `Color picker`_ : dans le m√™me genre, ce package vous permet de s√©lectionner une couleur et inclut un nuancier int√©gr√© ! Cliquez droit sur un texte comme `rgb(126, 145, 233` et choisissez "Color Picker" pour afficher le nuancier.
- atom-django-templates_ : ajoute le support du langage de templates de Django, avec des autocompl√©tions bien pratiques !

Personnaliser Atom
==================

Vous pouvez personnaliser l'apparence d'Atom en installant des th√®mes (qui g√®rent l'apparence globale de l'interface) et des colorations syntaxiques (qui colorent le code pour le rendre plus lisible).

Vous pouvez installer ces th√®mes et colorations dans l'onglet "Install/Themes" du panneau de Pr√©f√©rences. N'h√©sitez pas √† `faire quelques recherches <https://atom.io/themes>`_ pour d√©couvrir les th√®mes les plus sympas !
